Los commponentes tienen una propiedas especial llamada children, la cual la pasamos poneinedo el conenido en medio del commponente
Tal que asi -> <Mycomponent>Children</Mycomponent>

Y accedemos desde el componente al children asi -> const Mycomponent = ({chidlren}) => {}



useRef es un hook que te permite guardar en un objeto una referencia que no va a cambiar entre rendrizad.

Ejemplo: 
    import {useReff} from 'react'

    const elementRef = useRef()

    <h1 ref={elementRef}>My title</h1>

El elementRef ahora tendria el elemento h1 del DOM osea haria referencia a el

A los componentes no se les puede añadir una referencia asi como asi, para hacerlo se utiliza el forwardRef

En el componente que queramos usar el ref={} importamos el forwardRef y envolver el componente con el
Ejemplo:
    import {forwardRef} from 'react'

    const MyComponent = forwardRef(({propiedades}, ref) => {
        ...nuestro componente
    })

useImperativeHandle es un que se utiliza para definir funciones en un componente que se pueden invocar desde fuera del componente 
y no va a cambiar su valor a no ser que se lo indiques con las dependecias.
En el primer parametro le indicamos donde tiene que guardar la funcion que queremos ejecutar desde fuera del componente

Ejemplo: 
    useImperativeHandle(ref, () => {
        return {
            funcionAExportar
        }
    })

Para acceder a esta funcion desde el componente donde queremos utilizarla seria tal que asi -> 

    import {useRef} from 'react'

    const elementRef = useRef()

    // Accedemos al valor siempre que se le cambia el valor al ref se accede con current
    
    const ejecutarFuncionAqui = elementRef.current.funcionAExportar()
    return (
        <ComponenteDeLaFuncion ref={elementRef} />
    )


La librería prop types te permite documentar que props son las que necesita un componente y los tipos de datos.
Para instalarla -> npm install prop-types

Importamos las proptypes en el componente donde queremos utilizarlas 
import PropTypes from 'prop-types'

Para utilizarlo al final del componente ->

MyComponent.PropTypes = {
    prop1: ProtoType.String.isRequired,
    ...
}

Con MyComponent.displayName = 'cualquiernombre' podemos cambiar el nombre del componente cuando salga una alerta de que alguna prop no esta bien 


Asignar valores por defecto a las props => 
    const MyCompnent = ({username, buttonLabel = 'This is a default value'}) => {
        ...
    }

TESTING EN react
Nuestro proyecto al haberlo inciado con create-react-app ya viene con algunas dependencias necesiarias para realizar el TESTING
Aun asi podemos instalar algunas dependecias que nos pueden ayudar :
    npm install --save-dev @testing-library/react
    npm install --save-dev @testing-library/jest-dom